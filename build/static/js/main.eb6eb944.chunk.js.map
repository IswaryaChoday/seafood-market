{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.eb6eb944.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {getFunName} from '../helpers';\n\nclass StorePicker extends React.Component {\n    // Create an empty ref\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n      };\n    \n\n    goToStore = event => {\n        // 1.Stop the form from submitting\n        event.preventDefault();\n        // 2.Get the text from the input\n        const storeName = this.myInput.current.value;\n        // 3.Change the page to /store/whatever-they-enter\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render(){\n        return (\n               <form className = \"store-selector\" onSubmit={this.goToStore}>\n                    <h2>Please enter a store : </h2>\n                    <input type  = \"text\" \n                    ref = {this.myInput}\n                    required placeholder = \"Store name\" \n                    defaultValue = {getFunName()} />\n                    <button type = \"submit\">Visit Store →</button>\n                </form>\n           \n            \n        );\n    }\n  }\n\n  export default StorePicker;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n// Stateless Functional Components\nconst Header = props => (\n        <header className = \"top\">\n            <h1>\n                Catch \n                <span className = \"ofThe\">\n                    <span className = \"of\">Of</span>\n                    <span className = \"the\">The</span>\n                </span> \n                Day\n            </h1>\n            <h3 className = \"tagline\">\n                <span>{props.tagline}</span>\n            </h3>\n        </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n  };\n  \nexport default Header;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component{\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  \n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === \"available\";\n        const transitionOptions = {\n          classNames: \"order\",\n          key,\n          timeout: { enter: 500, exit: 500 }\n        };\n        // Make sure the fish is loaded before we continue!\n        if (!fish) return null;\n        \n        if (!isAvailable) {\n            return (\n              <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                Sorry {fish ? fish.name : \"fish\"} is no longer available\n                </li>\n              </CSSTransition>\n      );\n    }\n        return (\n          <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            <span>\n              <TransitionGroup component=\"span\" className=\"count\">\n                <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 500, exit: 500 }}>\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n              lbs {fish.name}\n              {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.removeFromOrder(key)}>\n                &times;\n              </button>\n            </span>\n          </li>\n        </CSSTransition>\n      );\n    };\n\n    render(){\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === \"available\";\n            if (isAvailable) {\n              return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n          }, 0);\n\n        return (\n        <div className = \"order-wrap\">\n            <h2>Order</h2>\n            <TransitionGroup component=\"ul\" className=\"order\">\n              {orderIds.map(this.renderOrder)}\n            </TransitionGroup>\n            <div className=\"total\">\n                Total:\n                <strong>{formatPrice(total)}</strong>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component{\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n      };\n\n    createFish = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        \n        this.props.addFish(fish);\n        // // refresh the form\n        event.currentTarget.reset();\n    };\n    render(){\n        return (\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\n           <input name = \"name\" ref = {this.nameRef} type = \"text\" placeholder = \"Name\" />\n           <input name = \"price\" ref = {this.priceRef} type = \"text\" placeholder = \"Price\" />\n           <select name = \"status\" ref = {this.statusRef}> \n            <option value = \"available\">Fresh!</option>\n            <option value = \"unavailable\">Sold Out!</option>\n           </select>\n           <textarea name = \"desc\" ref = {this.descRef} placeholder = \"Desc\" />\n           <input name = \"image\" ref = {this.imageRef} type = \"text\" placeholder = \"Image\" />\n           <button type = \"submit\">+ Add Fish</button>\n        </form>  \n        );\n    }\n}\n\nexport default AddFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n    \n    handleChange = event => {\n        console.log(event.currentTarget.value);\n        // update that fish\n        // 1. Take a copy of the curernt fish\n        const updatedFish = {\n          ...this.props.fish,\n          [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n      };\n\n    render(){\n        return (\n        <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n        </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyB6Q-7qS6_og2hiFq6Z_ZpdOgjSURjpars\",\n    authDomain: \"catch-of-the-day-95863.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-95863.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component{\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        addFish: PropTypes.func\n      };\n\n      state = {\n        uid: null,\n        owner: null\n      };\n    \n      componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            this.authHandler({ user });\n          }\n        });\n      }\n    \n      authHandler = async authData => {\n        // 1 .Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n          // save it as our own\n          await base.post(`${this.props.storeId}/owner`, {\n            data: authData.user.uid\n          });\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n          uid: authData.user.uid,\n          owner: store.owner || authData.user.uid\n        });\n      };\n    \n      authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n          .auth()\n          .signInWithPopup(authProvider)\n          .then(this.authHandler);\n      };\n    \n      logout = async () => {\n        console.log(\"Logging out!\");\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n      };\n    \n      render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>;\n    \n        // 1. Check if they are logged in\n        if (!this.state.uid) {\n          return <Login authenticate={this.authenticate} />;\n        }\n    \n        // 2. check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n          return (\n            <div>\n              <p>Sorry you are not the owner!</p>\n              {logout}\n            </div>\n          );\n        }\n\n        // 3. They must be the owner, just render the inventory\n        return (\n        <div className=\"inventory\">\n            <h2>Inventory</h2>\n            {logout}\n            {Object.keys(this.props.fishes).map(key => (\n                <EditFishForm\n                key={key}\n                index={key}\n                fish={this.props.fishes[key]}\n                updateFish={this.props.updateFish}\n                deleteFish={this.props.deleteFish}\n                />\n            ))}\n\n            <AddFishForm addFish={this.props.addFish}/>\n            <button onClick = {this.props.loadSampleFishes}> Load Sample Fishes</button>\n          </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {formatPrice} from '../helpers';\n\nclass Fish extends React.Component{\n\n    static propTypes = {\n        details: PropTypes.shape({\n          image: PropTypes.string,\n          name: PropTypes.string,\n          desc: PropTypes.string,\n          status: PropTypes.string,\n          price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func,\n        index: PropTypes.string\n      };\n      \n    render(){\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === \"available\";\n        return (\n        <li className = \"menu-fish\">\n            <img src = {image} alt = {name}/>\n            <h3 className = \"fish-name\">{name}\n            <span className = \"price\">{formatPrice(price)}</span>\n            </h3>\n            <p>{desc}</p>\n            <button\n            disabled={!isAvailable}\n            onClick={() => this.props.addToOrder(this.props.index)}>\n            {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n            </button>\n        </li> \n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {}, \n        order: {}\n      };\n\n    static propTypes = {\n        match: PropTypes.object\n      };\n\n    //   To sync the state with the firebase database\n      componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n          }\n    //   JSON.parse - change back from string to an object\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n          context: this,\n          state: \"fishes\"\n        });\n      }\n\n      componentDidUpdate() {\n        console.log(this.state.order);\n        // To sync to the local storage\n        localStorage.setItem(\n          this.props.match.params.storeId,\n          JSON.stringify(this.state.order)\n        );\n      }\n    //   JSON.stringify - to convert to a string representation(originally in the form of an object)\n    //   To unlisten the changes\n      componentWillUnmount() {\n        base.removeBinding(this.ref);\n      }\n\n    //A method that takes in fish\n    addFish = fish => {\n        // // 1. Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n      // 1. Take a copy of the current state\n      const fishes = { ...this.state.fishes };\n      // 2. Update that state\n      fishes[key] = updatedFish;\n      // 3. Set that to state\n      this.setState({ fishes });\n    };\n\n    deleteFish = key => {\n      // 1. take a copy of state\n      const fishes = { ...this.state.fishes };\n      // 2. update the state\n      fishes[key] = null;\n      // 3.  update state\n      this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n      };\n      \n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that itemf from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n      };\n\n\n    \n    render() {\n        return (\n            <div className = \"catch-of-the-day\">\n                <div className = \"menu\">\n                    <Header tagline = \"Change the way you SEA Food\"/>\n                    <ul className = \"fishes\">\n                    {Object.keys(this.state.fishes).map(key => (\n                    <Fish \n                    key = {key} \n                    index={key}\n                    details={this.state.fishes[key]}\n                    addToOrder={this.addToOrder}\n                    />\n                    ))}\n                    </ul>\n                </div>\n                \n                <Order \n                fishes={this.state.fishes} \n                order={this.state.order} \n                removeFromOrder={this.removeFromOrder}/>\n\n                <Inventory \n                addFish={this.addFish} \n                updateFish={this.updateFish} \n                deleteFish={this.deleteFish} \n                loadSampleFishes = {this.loadSampleFishes} \n                fishes={this.state.fishes}\n                storeId={this.props.match.params.storeId}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path = \"/\" component = {StorePicker} />\n            <Route exact path = \"/store/:storeId\" component = {App} />\n            <Route component = {NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router';\n// import StorePicker from './components/StorePicker';\n// import App from './components/App';\nimport './css/style.css';\n\nrender(<Router /> ,document.querySelector('#main'));\n"],"sourceRoot":""}