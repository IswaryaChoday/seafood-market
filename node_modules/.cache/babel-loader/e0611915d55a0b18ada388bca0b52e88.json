{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/ishwaryabolla/Documents/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ishwaryabolla/Documents/catch-of-the-day/src/components/Inventory.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\n\nvar Inventory = /*#__PURE__*/function (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  var _super = _createSuper(Inventory);\n\n  function Inventory() {\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_this)\n                });\n\n              case 2:\n                store = _context.sent;\n                console.log(store); // 2. Claim it if there is no owner\n\n                if (store.owner) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid\n                });\n\n              case 7:\n                // 3. Set the state of the inventory component to reflect the current user\n                _this.setState({\n                  uid: authData.user.uid,\n                  owner: store.owner || authData.user.uid\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Logging out!\");\n              _context2.next = 3;\n              return firebase.auth().signOut();\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }\n      }, \"Log Out!\"); // 1. Check if they are logged in\n\n      if (!this.state.uid) {\n        return /*#__PURE__*/React.createElement(Login, {\n          authenticate: this.authenticate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }\n        });\n      } // 2. check if they are not the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }, \"Sorry you are not the owner!\"), logout);\n      } // 3. They must be the owner, just render the inventory\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inventory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Inventory\"), Object.keys(this.props.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updateFish: _this3.props.updateFish,\n          deleteFish: _this3.props.deleteFish,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        });\n      }), /*#__PURE__*/React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \" Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func,\n  addFish: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Users/ishwaryabolla/Documents/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","Inventory","state","uid","owner","authHandler","authData","base","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","firebaseApp","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\n\nclass Inventory extends React.Component{\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        addFish: PropTypes.func\n      };\n\n      state = {\n        uid: null,\n        owner: null\n      };\n    \n      componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            this.authHandler({ user });\n          }\n        });\n      }\n    \n      authHandler = async authData => {\n        // 1 .Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n          // save it as our own\n          await base.post(`${this.props.storeId}/owner`, {\n            data: authData.user.uid\n          });\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n          uid: authData.user.uid,\n          owner: store.owner || authData.user.uid\n        });\n      };\n    \n      authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n          .auth()\n          .signInWithPopup(authProvider)\n          .then(this.authHandler);\n      };\n    \n      logout = async () => {\n        console.log(\"Logging out!\");\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n      };\n    \n      render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>;\n    \n        // 1. Check if they are logged in\n        if (!this.state.uid) {\n          return <Login authenticate={this.authenticate} />;\n        }\n    \n        // 2. check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n          return (\n            <div>\n              <p>Sorry you are not the owner!</p>\n              {logout}\n            </div>\n          );\n        }\n\n        // 3. They must be the owner, just render the inventory\n        return (\n        <div className=\"inventory\">\n            <h2>Inventory</h2>\n\n            {Object.keys(this.props.fishes).map(key => (\n                <EditFishForm\n                key={key}\n                index={key}\n                fish={this.props.fishes[key]}\n                updateFish={this.props.updateFish}\n                deleteFish={this.props.deleteFish}\n                />\n            ))}\n\n            <AddFishForm addFish={this.props.addFish}/>\n            <button onClick = {this.props.loadSampleFishes}> Load Sample Fishes</button>\n          </div>\n        );\n    }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}